#!/bin/bash

# ==============================================================================
# RUN NODE SCRIPT (Ch·∫°y m·ªôt node ƒë·∫ßy ƒë·ªß: Primary + Worker + Executor)
# ==============================================================================

set -e

# --- Nh·∫≠n v√† ki·ªÉm tra tham s·ªë node id ---
if [ -z "$1" ]; then
    echo "‚ùå L·ªói: Vui l√≤ng cung c·∫•p m·ªôt node ID."
    echo "   V√≠ d·ª•: ./run_node.sh 0"
    exit 1
fi

# Ki·ªÉm tra xem tham s·ªë c√≥ ph·∫£i l√† s·ªë nguy√™n kh√¥ng
if ! [[ "$1" =~ ^[0-9]+$ ]]; then
    echo "‚ùå L·ªói: Node ID '$1' ph·∫£i l√† m·ªôt s·ªë nguy√™n kh√¥ng √¢m."
    exit 1
fi
NODE_ID=$1

# --- ƒê∆∞·ªùng d·∫´n ---
BENCHMARK_DIR="benchmark"
NODE_BINARY="./target/release/node"
EXECUTOR_BINARY="./go/bin/exetps"

LOG_DIR="$BENCHMARK_DIR/logs"
COMMITTEE_FILE="$BENCHMARK_DIR/.committee.json"
PARAMETERS_FILE="$BENCHMARK_DIR/.parameters.json"
KEY_FILE="$BENCHMARK_DIR/.node-$NODE_ID.json"

# --- Ki·ªÉm tra c√°c file c·∫ßn thi·∫øt ---
for f in "$NODE_BINARY" "$EXECUTOR_BINARY" "$KEY_FILE" "$COMMITTEE_FILE" "$PARAMETERS_FILE"; do
    if [ ! -f "$f" ]; then
        echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file c·∫ßn thi·∫øt: $f"
        echo "   H√£y ƒë·∫£m b·∫£o b·∫°n ƒë√£ ch·∫°y script setup v√† bi√™n d·ªãch code th√†nh c√¥ng."
        exit 1
    fi
done

mkdir -p "$LOG_DIR"

# --- Kh·ªüi ch·∫°y Primary ---
primary_db="$BENCHMARK_DIR/db_primary_$NODE_ID"
primary_log="$LOG_DIR/primary-$NODE_ID.log"
primary_cmd="$NODE_BINARY run --keys \"$KEY_FILE\" --committee \"$COMMITTEE_FILE\" --store \"$primary_db\" --parameters \"$PARAMETERS_FILE\" primary"

echo "üöÄ Kh·ªüi ƒë·ªông Primary-$NODE_ID..."
# S·ª¨A L·ªñI: Chuy·ªÉn h∆∞·ªõng c·∫£ stdout v√† stderr v√†o file log
tmux new -d -s "primary-$NODE_ID" "sh -c 'RUST_LOG=info $primary_cmd > \"$primary_log\" 2>&1 || echo \"[FATAL] Primary exited\" >> \"$primary_log\"'"

# --- Kh·ªüi ch·∫°y Worker ---
worker_id=0
worker_db="$BENCHMARK_DIR/db_worker_${NODE_ID}_${worker_id}"
worker_log="$LOG_DIR/worker-${NODE_ID}-${worker_id}.log"
worker_cmd="$NODE_BINARY run --keys \"$KEY_FILE\" --committee \"$COMMITTEE_FILE\" --store \"$worker_db\" --parameters \"$PARAMETERS_FILE\" worker --id $worker_id"

echo "üöÄ Kh·ªüi ƒë·ªông Worker-${NODE_ID}-${worker_id}..."
# S·ª¨A L·ªñI: Chuy·ªÉn h∆∞·ªõng c·∫£ stdout v√† stderr v√†o file log
tmux new -d -s "worker-${NODE_ID}-${worker_id}" "sh -c 'RUST_LOG=info $worker_cmd > \"$worker_log\" 2>&1 || echo \"[FATAL] Worker exited\" >> \"$worker_log\"'"

# --- Kh·ªüi ch·∫°y Executor ---
executor_log="$LOG_DIR/executor-$NODE_ID.log"
executor_cmd="$EXECUTOR_BINARY --id $NODE_ID"

echo "üöÄ Kh·ªüi ƒë·ªông Executor-$NODE_ID..."
# S·ª¨A L·ªñI: Chuy·ªÉn h∆∞·ªõng c·∫£ stdout v√† stderr v√†o file log
tmux new -d -s "executor-$NODE_ID" "sh -c '$executor_cmd > \"$executor_log\" 2>&1 || echo \"[FATAL] Executor exited\" >> \"$executor_log\"'"

echo ""
echo "‚úÖ Node $NODE_ID v√† c√°c th√†nh ph·∫ßn li√™n quan ƒë√£ ƒë∆∞·ª£c kh·ªüi ch·∫°y."
echo "   - Xem c√°c session ƒëang ch·∫°y: tmux ls"
echo "   - Theo d√µi log c·ªßa primary:   tail -f $primary_log"
echo "   - Theo d√µi log c·ªßa worker:    tail -f $worker_log"
echo "   - Theo d√µi log c·ªßa executor:  tail -f $executor_log"
echo ""
echo "   - ƒê·ªÉ d·ª´ng node n√†y, ch·∫°y l·ªánh:"
echo "     tmux kill-session -t primary-$NODE_ID && tmux kill-session -t worker-${NODE_ID}-${worker_id} && tmux kill-session -t executor-$NODE_ID"